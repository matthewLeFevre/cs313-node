{"version":3,"sources":["views/static/Header.js","views/static/Footer.js","views/public/Home.js","views/public/About.js","services/Globals.js","views/public/Login.js","views/public/Signup.js","views/private/Party.js","views/private/Parties.js","views/private/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","NavLink","to","activeClassName","accountInfo","accountLoggedIn","onClick","logout","Footer","Link","Home","id","About","Globals","headers","Content-Type","Accept","arr1","arr2","concat","length","arguments","undefined","possibleCharacters","i","charAt","Math","floor","random","input","e","document","innerHTML","childNodes","nodeValue","elt","textContent","data","method","body","JSON","stringify","controller","action","payload","console","log","query","success","fetch","this","url","then","res","json","status","Login","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","bind","assertThisInitialized","onLogin","state","accountName","accountPassword","target","name","value","setState","defineProperty","_this2","req","createRequestBody","login","window","alert","message","type","React","Component","Signup","onRegister","Party","createDispatch","deleteParty","showAccounts","addAccountToParty","handelAccountId","updateDispatches","dispatches","wasDeleted","dispatchtext","accounts","accountId","match","params","partyid","_this3","partyId","_this4","accountid","_this5","setInterval","prevState","_this6","Redirect","map","dispatch","index","Party_Dispatch","key","accountname","Dispatch","display","date","Date","dispatchcreated","toDateString","Parties","createParty","handlePartyName","partyName","updateParties","parties","party","partyname","Route","path","render","private_Party","assign","Dashboard","Switch","private_Parties","Settings_default","isAdmin","Admin_default","App","accountLevel","BrowserRouter","static_Header","exact","component","public_Login","private_Dashboard","static_Footer","Boolean","location","hostname","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52d8ca38.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo\">Blunderly</div>\r\n      <nav className=\"nav\">\r\n        <ul className=\"nav__list\">\r\n          <li className=\"nav__item\">\r\n            <NavLink to=\"/home\" activeClassName=\"active\" className=\"nav__link\">Home</NavLink>\r\n          </li>\r\n          <li className=\"nav__item\">\r\n            <NavLink to=\"/about\" activeClassName=\"active\" className=\"nav__link\">About</NavLink>\r\n          </li>\r\n          <li className=\"nav__item\">\r\n            { props.accountInfo.accountLoggedIn\r\n              ? <NavLink to=\"/home\" activeClassName=\"active\" className=\"nav__link\" onClick={props.logout}>Logout</NavLink>\r\n              : <NavLink to=\"/login\" activeClassName=\"active\" className=\"nav__link\">Login</NavLink>}\r\n          </li>\r\n          <li className=\"nav__item\">\r\n            { props.accountInfo.accountLoggedIn\r\n              ? ''\r\n              : <NavLink to=\"/signup\" activeClassName=\"active\" className=\"nav__link\">SignUp</NavLink>}\r\n          </li>\r\n          { props.accountInfo.accountLoggedIn\r\n            ? <li className=\"nav__item\"><NavLink to=\"/dashboard/parties\" activeClassName=\"active\" className=\"nav__link\">Parties</NavLink></li>\r\n            : ''\r\n          }\r\n          { props.accountInfo.accountLoggedIn\r\n            ? <li className=\"nav__item\"><NavLink to=\"/dashboard/settings\" activeClassName=\"active\" className=\"nav__link\">Settings</NavLink></li>\r\n            : ''\r\n          }\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Footer = (props) => {\r\n  return(\r\n    <footer className=\"footer\">\r\n      <div className=\"footer-section\">\r\n        <ul className=\"footer-group\">\r\n          <li className=\"footer-group__item\">\r\n            <h4 className=\"footer-group__title\">Legal</h4>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">Privacy</Link>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">Terms of use</Link>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">Contact</Link>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"footer-group\">\r\n          <li className=\"footer-group__item\">\r\n            <h4 className=\"footer-group__title\">Info</h4>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About Blunderly</Link>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">The Creator</Link>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"footer-group\">\r\n          <li className=\"footer-group__item\">\r\n            <h4 className=\"footer-group__title\">Contribute</h4>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">Documentation</Link>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">Social Media</Link>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">Help Code</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"txt-center mid spacing--top--2\">\r\n        Created with Bluntness by Matthew LeFevre &copy; 2018\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <div id=\"home\">\r\n      <section className=\"home__banner\">\r\n        <div className=\"banner__text\">\r\n          <h1 className=\"banner__title\">Blunderly</h1>\r\n          <p className=\"banner__sub-title\">A bungling blooper of a \"Slack\" clone</p>\r\n          <Link to=\"/signup\" className=\"btn mid action\">Get Started</Link>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = (props) => {\r\n  return (\r\n    <div id=\"About\">\r\n      <article className=\"format_text\">\r\n        <h1>About Blunderly</h1>\r\n        <p>The word blunder is a verb for the act of commiting a stupid mistake, so try not to blunder about when you are on blunderly... hahaha.</p>\r\n        <p>Blunderly is my final project for a computer science web backend online course from BYU-Idaho(what a mouthfull... maybe I should be linking things?). I find instant messaging amazing and when I started using slack I realized it was just a glorified way of sending messages... and that was it. Oh yeah maybe it has the option to add links or upload and send assets sure thats all well and good but its main purpose is to meerly communicate in an instant messaging kind of way.</p>\r\n        <p>This is the closest thing I have been able to make in the time I have been given to a slack clone (should probably try and find a better way to put that but hey limited time).</p>\r\n        <p>Have a good time messaging other people on Blunderly currently any account can message any other one so... yeah not the most private of things. Use at your own risk! But have fun too!</p>\r\n        <h2>For you technical nerds out there:</h2>\r\n        <p>Blunderly was built in react on the front end node express on the backend and a free heroku postgres database.</p>\r\n      </article>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About; ","//================================\r\n// Globals Class\r\n//================================\r\n\r\nclass Globals {\r\n\r\n  headers= {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept\": \"application/json\",\r\n  };\r\n\r\n  static createRandomKey(length = 7) {\r\n    let id = \"\";\r\n    let possibleCharacters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (let i = 0; i < length; i++) {\r\n      id += possibleCharacters.charAt(Math.floor(Math.random() * possibleCharacters.length));\r\n    }\r\n\r\n    return id;\r\n  }\r\n\r\n  static htmlDecode(input){\r\n    var e = document.createElement('div');\r\n    e.innerHTML = input;\r\n    return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\r\n  }\r\n\r\n  static htmlEncode(input) {\r\n    let elt = document.createElement('span'); \r\n    elt.textContent = input; \r\n    return elt.innerHTML;\r\n  }\r\n\r\n  static createRequest(data) {\r\n\r\n    let req = {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data),\r\n    }\r\n\r\n    return req;\r\n  }\r\n\r\n  static createBody(controller, action, payload) {\r\n    let body = {\r\n      controller: controller,\r\n      action: action,\r\n      payload: payload,\r\n    }\r\n\r\n    return body;\r\n  }\r\n\r\n  static createRequestBody(body) {\r\n    console.log(body);\r\n    let req = {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body),\r\n    }\r\n\r\n    return req;\r\n  }\r\n\r\n  concatArray(arr1, arr2) {\r\n    return arr1.concat(arr2);\r\n  }\r\n\r\n  static getRequest(query, success) {\r\n    fetch(`${this.url}${query}`)\r\n    .then(res => res.json)\r\n    .then(res => {\r\n      console.log(res.status);\r\n      if(res.status === 'success') {\r\n        success(res.data);\r\n      } else {\r\n        // failure(res.message);\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n//Export Statement\r\nexport default Globals;","import React from 'react';\r\nimport Globals from '../../services/Globals';\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onLogin = this.onLogin.bind(this);\r\n    this.state = {\r\n      accountName: \"\",\r\n      accountPassword: \"\"\r\n    };\r\n  }\r\n\r\n  onChange(e) {\r\n    const target = e.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  onLogin() {\r\n    let data = {\r\n      accountName: this.state.accountName,\r\n      accountPassword: this.state.accountPassword,\r\n    }\r\n    let req = Globals.createRequestBody(data);\r\n    fetch(\"/loginAccount\", req)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      if(res.status === \"success\") {\r\n        this.props.login(res.data);\r\n      } else {\r\n        window.alert(res.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"login\">\r\n        <form className=\"form--sml\">\r\n          <h1 className=\"form__title\">Login</h1>\r\n          <fieldset className=\"field spacing--bottom--1\">\r\n            <label className=\"label\">Account Name</label>\r\n            <input onChange={this.onChange} className=\"input full main\" type=\"text\" name=\"accountName\" />\r\n          </fieldset>\r\n          <fieldset className=\"field spacing--bottom--2\">\r\n            <label className=\"label\">Password</label>\r\n            <input onChange={this.onChange} className=\"input full main\" type=\"password\" name=\"accountPassword\"/>\r\n          </fieldset>\r\n          <fieldset className=\"field spacing--bottom--1\">\r\n            <button onClick={this.onLogin} className=\"btn action full breath\" type=\"button\">Login</button>\r\n          </fieldset>\r\n        </form>\r\n        <section className=\"format_text\">\r\n          <p>Eventually you will be able to signup with your own account for now there are just preset accounts to sign in. Please choose any number of them for testing.</p>\r\n          <ul>\r\n            <li>name: billey<br/>password: 1234</li>\r\n            <li>name: sally<br/>password: 1234</li>\r\n            <li>name: rick<br/>password: 1234</li>\r\n            <li>name: cassey<br/>password: 1234</li>\r\n            <li>name: matt<br/>password: 1234</li>\r\n          </ul>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport Globals from '../../services/Globals';\r\n\r\nclass Signup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onRegister = this.onRegister.bind(this);\r\n    this.state = {\r\n      accountName: \"\",\r\n      accountPassword: \"\"\r\n    };\r\n  }\r\n\r\n  onChange(e) {\r\n    const target = e.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  onRegister() {\r\n    let data = {\r\n      accountName: this.state.accountName,\r\n      accountPassword: this.state.accountPassword,\r\n    }\r\n    let req = Globals.createRequestBody(data);\r\n    fetch(\"/createAccount\", req)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      if(res.status === \"success\") {\r\n        this.props.login(res.data);\r\n      } else {\r\n        window.alert(res.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div id=\"register\">\r\n        <form className=\"form--sml\">\r\n          <h1 className=\"form__title\">Signup</h1>\r\n          <fieldset className=\"field spacing--bottom--1\">\r\n            <label className=\"label\">Account Name</label>\r\n            <input onChange={this.onChange} className=\"input full main\" type=\"text\" name=\"accountName\" />\r\n          </fieldset>\r\n          <fieldset className=\"field spacing--bottom--2\">\r\n            <label className=\"label\">Password</label>\r\n            <input onChange={this.onChange} className=\"input full main\" type=\"password\" name=\"accountPassword\"/>\r\n          </fieldset>\r\n          <fieldset className=\"field\">\r\n            <p>By Clicking the button below you awknowledge that you have read and will abide by the terms of service as well as the privacy policy.</p>\r\n          </fieldset>\r\n          <fieldset className=\"field spacing--bottom--1\">\r\n            <button onClick={this.onRegister} className=\"btn action full breath\" type=\"button\">Signup</button>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport Globals from '../../services/Globals';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Party extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.createDispatch = this.createDispatch.bind(this);\r\n    this.deleteParty = this.deleteParty.bind(this);\r\n    this.showAccounts = this.showAccounts.bind(this);\r\n    this.addAccountToParty = this.addAccountToParty.bind(this);\r\n    this.handelAccountId = this.handelAccountId.bind(this);\r\n    this.updateDispatches = this.updateDispatches.bind(this);\r\n    this.state = {\r\n      dispatches: [],\r\n      wasDeleted: false,\r\n      dispatchtext: '',\r\n      accounts: [],\r\n      showAccounts: false,\r\n      accountId: '',\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(`/dispatchesByParty/${this.props.match.params.partyid}`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res);\r\n      this.setState({\r\n        dispatches: res.data,\r\n      });\r\n    });\r\n    fetch(\"/accounts\")\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        accounts: res.data\r\n      });\r\n    });\r\n    this.updateDispatches();\r\n  }\r\n\r\n  deleteParty() {\r\n    let body = {\r\n      partyId: this.props.match.params.partyid,\r\n    }\r\n    let req = Globals.createRequestBody(body);\r\n    fetch('/deleteParty', req)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      if(res.status === \"success\") {\r\n        window.alert(res.message);\r\n        this.setState({\r\n          wasDeleted: true,\r\n        })\r\n      } else {\r\n        window.alert(res.message);\r\n      }\r\n    })\r\n  }\r\n\r\n  createDispatch() {\r\n    let data = {\r\n      accountid: this.props.accountInfo.accountid,\r\n      partyid: this.props.match.params.partyid,\r\n      dispatchtext: this.state.dispatchtext\r\n    }\r\n    let req = Globals.createRequestBody(data);\r\n    fetch('/createDispatch', req)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        dispatches: res.data,\r\n      })\r\n    });\r\n  }\r\n\r\n  addAccountToParty() {\r\n    let data = {\r\n      accountId: this.state.accountId,\r\n      partyId: this.props.match.params.partyid\r\n    }\r\n    let req = Globals.createRequestBody(data);\r\n    fetch('/addAccountToParty', req)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      window.alert(res.status);\r\n    })\r\n  }\r\n\r\n  updateDispatches() {\r\n    setInterval(() => {\r\n      fetch(`/dispatchesByParty/${this.props.match.params.partyid}`)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          dispatches: res.data,\r\n        });\r\n      });\r\n    }, 3000);\r\n  }\r\n\r\n  showAccounts() {\r\n    this.setState((prevState) => ({\r\n      showAccounts: !prevState.showAccounts,\r\n    }))\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      dispatchtext: e.target.value,\r\n    });\r\n  }\r\n\r\n  handelAccountId(e) {\r\n    this.setState({\r\n      accountId: e.target.value,\r\n    })\r\n  }\r\n  render() {\r\n\r\n    if (this.state.wasDeleted) {\r\n      return (\r\n        <Redirect to=\"/dashboard\" />\r\n        );\r\n    } else {\r\n      return (\r\n        <article className=\"col--8 col--mdm--9 col--lrg--10 bg-theme-blue\">\r\n          <div className=\"dispatch__container\">\r\n            { this.state.dispatches.map((dispatch, index) => {\r\n              return(<Dispatch dispatch={dispatch} key={index} accountInfo={this.props.accountInfo} />)\r\n            })}\r\n            <form>\r\n              <fieldset className=\"field btn-pair\">\r\n                <div className=\"field--btn-pair\">\r\n                  <input type=\"text\" className=\"input full btn-pair\" onChange={this.onChange}/>\r\n                  <button className=\"btn--input\" type=\"button\" onClick={this.createDispatch}>Send</button>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"field\">\r\n                <label className=\"label\">Add Accounts to Party</label>\r\n              </fieldset>\r\n                {this.state.showAccounts \r\n                  ? <fieldset className=\"field\">\r\n                      <select name=\"accountName\" onChange={this.handelAccountId} className=\"input--select full breath\">\r\n                        {this.state.accounts.map((accounts, index) => {\r\n                          return (\r\n                            <option value={accounts.accountid}>{accounts.accountname}</option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                      <button type=\"button\" onClick={this.addAccountToParty} className=\"btn breath success\">Add selected account to party</button>\r\n                    </fieldset>\r\n                  : ''}\r\n              <fieldset className=\"field\">\r\n                <button onClick={this.showAccounts} type=\"button\" className=\"btn breath primary\">{this.state.showAccounts ? \"Hide Acconts\" : \"Show accounts\"}</button>\r\n              </fieldset>\r\n              <fieldset className=\"field\">\r\n                <button type=\"button\" className=\"btn breath danger\" onClick={this.deleteParty}>Delete Party</button>\r\n              </fieldset>\r\n            </form>\r\n          </div>\r\n        </article>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Party;\r\n\r\nconst Dispatch = (props) => {\r\n  let display = \"dispatch\";\r\n  let date = new Date(props.dispatch.dispatchcreated);\r\n  if(props.dispatch.accountid === props.accountInfo.accountid) {\r\n    display = \"dispatch self\";\r\n  }\r\n  return (\r\n    <div className={display}>\r\n      <p className=\"dispatch__account\">{props.dispatch.accountname} <span className=\"dispatch__time\">{date.toDateString()}</span></p>\r\n      <p className=\"dispatch__message\">{props.dispatch.dispatchtext}</p>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {NavLink, Route} from 'react-router-dom';\r\nimport Party from './Party';\r\nimport Globals from '../../services/Globals';\r\n\r\nclass Parties extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.createParty = this.createParty.bind(this);\r\n    this.handlePartyName = this.handlePartyName.bind(this);\r\n    this.state ={\r\n      partyName: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.updateParties(false);\r\n  }\r\n\r\n  createParty() {\r\n    let body = {\r\n      partyName: this.state.partyName,\r\n      accountId: this.props.accountInfo.accountid,\r\n    }\r\n    let req = Globals.createRequestBody(body);\r\n    fetch('/createParty', req)\r\n    .then(res => res.json())\r\n    .then(res =>{\r\n      this.props.updateParties(res.data);\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  handlePartyName(e) {\r\n    this.setState({\r\n      partyName: e.target.value,\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"grid page__full--header\">\r\n        <ul className=\"party__list col--lrg--2 col--mdm--3 col--4 bg-theme-black\">\r\n          {this.props.parties.map( (party, index) => {\r\n            return (\r\n              <li className=\"party__item\" key={index}>\r\n                <NavLink activeClassName=\"party__link active\" to={`/dashboard/parties/${party.partyid}`} className=\"party__link \">{party.partyname}</NavLink></li>\r\n            );\r\n          })}\r\n          <li className=\"party__item--btn-pair\">\r\n              <fieldset className=\"field\">\r\n                <div className=\"field--btn-pair\">\r\n                  <input type=\"text\" className=\"input sml\" onChange={this.handlePartyName}/>\r\n                  <label className=\"btn icon btn-pair tiny\" onClick={this.createParty}>New</label>\r\n                </div>\r\n              </fieldset>\r\n          </li>\r\n        </ul>\r\n        <Route path=\"/dashboard/parties/:partyid\" render={(props) => <Party accountInfo={this.props.accountInfo} {...props} />} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Parties;","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\n\r\nimport Parties from './Parties';\r\nimport Settings from './Settings';\r\nimport Admin from './Admin';\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.updateParties = this.updateParties.bind(this);\r\n    this.state = {\r\n      parties: []\r\n    };\r\n  } \r\n  componentDidMount() {\r\n    fetch(`/partiesByAccount/${this.props.accountInfo.accountid}`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      this.setState({parties: res.data});\r\n    });\r\n  }\r\n\r\n  updateParties(parties) {\r\n    if(parties) {\r\n      this.setState({\r\n        parties: parties,\r\n      });\r\n    } else {\r\n      fetch(`/partiesByAccount/${this.props.accountInfo.accountid}`)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        this.setState({parties: res.data});\r\n      });\r\n    }\r\n  }\r\n  render () {\r\n    return (\r\n      <div id=\"Dashbaord\">\r\n        <Switch>\r\n          <Route path=\"/dashboard/parties\" render={(props) => <Parties accountInfo={this.props.accountInfo} parties={this.state.parties} updateParties={this.updateParties} {...props} />} />\r\n          <Route path=\"/dashboard/settings\" render={(props) => <Settings {...props} />} />\r\n          <Route path=\"/dashboard/admin\" render={(props) => \r\n            this.state.isAdmin\r\n            ? <Admin {...props} />\r\n            : <Redirect to=\"/login\" />\r\n           }/>\r\n          <Redirect to=\"/dashboard/parties\" />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom';\nimport './App.css';\n\nimport Header from './views/static/Header';\nimport Footer from './views/static/Footer';\nimport Home from './views/public/Home';\nimport About from './views/public/About';\nimport Login from './views/public/Login';\nimport Signup from './views/public/Signup';\nimport Dashboard from './views/private/Dashboard';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.login = this.login.bind(this);\n    this.state = {\n      accountInfo: {\n        accountLoggedIn: false,\n      }\n    }\n  }\n\n  login (accountInfo) {\n    this.setState({\n      accountInfo: {\n        accountLoggedIn: true,\n        accountid: accountInfo.accountid,\n        accountLevel: 'user',\n      }\n    });\n  }\n\n  logout () {\n    return console.log(\"blue\");\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Header accountInfo={this.state.accountInfo} logout={this.logout}/>\n          <Switch>\n            <Route path=\"/\" exact={true}  component={Home} />\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/login\" render={(props) => this.state.accountInfo.accountLoggedIn \n                                                      ? <Redirect to=\"/dashboard\" />\n                                                      : <Login login={this.login} {...props} />\n                                                    } />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/dashboard\" render={(props) => <Dashboard accountInfo={this.state.accountInfo} {...props}/>} />\n          </Switch>\n          <Footer />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}